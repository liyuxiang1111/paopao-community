<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dlu.liyuxiang.dao.CommentReplyMapper">
  <resultMap id="BaseResultMap" type="com.dlu.liyuxiang.pojo.CommentReply">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="comment_id" jdbcType="BIGINT" property="commentId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="at_user_id" jdbcType="BIGINT" property="atUserId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="ip_loc" jdbcType="VARCHAR" property="ipLoc" />
    <result column="created_on" jdbcType="BIGINT" property="createdOn" />
    <result column="modified_on" jdbcType="BIGINT" property="modifiedOn" />
    <result column="deleted_on" jdbcType="BIGINT" property="deletedOn" />
    <result column="is_del" jdbcType="TINYINT" property="isDel" />
  </resultMap>
  <sql id="Base_Column_List">
    id, comment_id, user_id, at_user_id, content, ip, ip_loc, created_on, modified_on, 
    deleted_on, is_del
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from p_comment_reply
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from p_comment_reply
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.dlu.liyuxiang.pojo.CommentReply">
    insert into p_comment_reply (id, comment_id, user_id, 
      at_user_id, content, ip, 
      ip_loc, created_on, modified_on, 
      deleted_on, is_del)
    values (#{id,jdbcType=BIGINT}, #{commentId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{atUserId,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, 
      #{ipLoc,jdbcType=VARCHAR}, #{createdOn,jdbcType=BIGINT}, #{modifiedOn,jdbcType=BIGINT}, 
      #{deletedOn,jdbcType=BIGINT}, #{isDel,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.dlu.liyuxiang.pojo.CommentReply">
    insert into p_comment_reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="atUserId != null">
        at_user_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="ipLoc != null">
        ip_loc,
      </if>
      <if test="createdOn != null">
        created_on,
      </if>
      <if test="modifiedOn != null">
        modified_on,
      </if>
      <if test="deletedOn != null">
        deleted_on,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="commentId != null">
        #{commentId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="atUserId != null">
        #{atUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="ipLoc != null">
        #{ipLoc,jdbcType=VARCHAR},
      </if>
      <if test="createdOn != null">
        #{createdOn,jdbcType=BIGINT},
      </if>
      <if test="modifiedOn != null">
        #{modifiedOn,jdbcType=BIGINT},
      </if>
      <if test="deletedOn != null">
        #{deletedOn,jdbcType=BIGINT},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dlu.liyuxiang.pojo.CommentReply">
    update p_comment_reply
    <set>
      <if test="commentId != null">
        comment_id = #{commentId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="atUserId != null">
        at_user_id = #{atUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="ipLoc != null">
        ip_loc = #{ipLoc,jdbcType=VARCHAR},
      </if>
      <if test="createdOn != null">
        created_on = #{createdOn,jdbcType=BIGINT},
      </if>
      <if test="modifiedOn != null">
        modified_on = #{modifiedOn,jdbcType=BIGINT},
      </if>
      <if test="deletedOn != null">
        deleted_on = #{deletedOn,jdbcType=BIGINT},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dlu.liyuxiang.pojo.CommentReply">
    update p_comment_reply
    set comment_id = #{commentId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      at_user_id = #{atUserId,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      ip_loc = #{ipLoc,jdbcType=VARCHAR},
      created_on = #{createdOn,jdbcType=BIGINT},
      modified_on = #{modifiedOn,jdbcType=BIGINT},
      deleted_on = #{deletedOn,jdbcType=BIGINT},
      is_del = #{isDel,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>